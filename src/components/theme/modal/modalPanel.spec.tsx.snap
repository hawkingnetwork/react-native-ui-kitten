// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@modal panel checks * close modal checking inner 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <Text>
      Modal Panel Test
    </Text>
  </View>
  <Button
    onPress={[Function]}
    testID="@modal/show"
    title="Open Modal"
  />
  <Button
    onPress={[Function]}
    testID="@modal/hide-outer"
    title="Hide Modal"
  />
</View>
`;

exports[`@modal panel checks * close modal checking outer 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <Text>
      Modal Panel Test
    </Text>
  </View>
  <Button
    onPress={[Function]}
    testID="@modal/show"
    title="Open Modal"
  />
  <Button
    onPress={[Function]}
    testID="@modal/hide-outer"
    title="Hide Modal"
  />
</View>
`;

exports[`@modal panel checks * modal panel render with props / children checking 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <Text>
      Modal Panel Test
    </Text>
  </View>
  <Button
    onPress={[Function]}
    testID="@modal/show"
    title="Open Modal"
  />
  <Button
    onPress={[Function]}
    testID="@modal/hide-outer"
    title="Hide Modal"
  />
</View>
`;

exports[`@modal panel checks * modal panel renders properly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <Text>
      Modal Panel Test
    </Text>
  </View>
  <Button
    onPress={[Function]}
    testID="@modal/show"
    title="Open Modal"
  />
  <Button
    onPress={[Function]}
    testID="@modal/hide-outer"
    title="Hide Modal"
  />
</View>
`;

exports[`@modal-service: service checks * unexpected branch cover 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/single"
    >
      <Text>
        Show Single Modal
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/multiple"
    >
      <Text>
        Show Single Modal
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/backdrop"
    >
      <Text>
        Show Back-Drop Allowed Modal
      </Text>
    </View>
  </View>
</View>
`;
